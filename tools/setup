#!/usr/bin/env node
//
//                          88  88               88                                                                      88
//                          88  ""               88                         ,d           ,d                              88
//                          88                   88                         88           88                              88
//  888888888  88       88  88  88  8b,dPPYba,   88,dPPYba,    ,adPPYba,  MM88MMM      MM88MMM  ,adPPYba,    ,adPPYba,   88  ,adPPYba,
//       a8P"  88       88  88  88  88P"    "8a  88P"    "8a  a8"     "8a   88           88    a8"     "8a  a8"     "8a  88  I8[    ""
//    ,d8P"    88       88  88  88  88       d8  88       d8  8b       d8   88           88    8b       d8  8b       d8  88   `"Y8ba,
//  ,d8"       "8a,   ,a88  88  88  88b,   ,a8"  88b,   ,a8"  "8a,   ,a8"   88,          88,   "8a,   ,a8"  "8a,   ,a8"  88  aa    ]8I
//  888888888   `"YbbdP"Y8  88  88  88`YbbdP""   8Y"Ybbd8""    `"YbbdP""    "Y888        "Y888  `"YbbdP""    `"YbbdP""   88  `"YbbdP""
//                                  88
//                                  88
//
//  .d8888. d88888b d888888b db    db d8888b.
//  88"  YP 88"     `~~88~~" 88    88 88  `8D
//  `8bo.   88ooooo    88    88    88 88oodD"
//    `Y8b. 88~~~~~    88    88    88 88~~~
//  db   8D 88.        88    88b  d88 88
//  `8888Y" Y88888P    YP    ~Y8888P" 88

const fs = require("mz/fs");
const Git = require("nodegit");
const inquirer = require("inquirer");
const path = require("path");

console.log(".d8888. d88888b d888888b db    db d8888b. \r\n88\"  YP 88\"     `~~88~~\" 88    88 88  `8D \r\n`8bo.   88ooooo    88    88    88 88oodD\" \r\n  `Y8b. 88~~~~~    88    88    88 88~~~   \r\ndb   8D 88.        88    88b  d88 88      \r\n`8888Y\" Y88888P    YP    ~Y8888P\" 88\n");
console.log("Hello, welcome to setup!");
console.log("~ Setup your local environment for zulipbot development! ~\n");

let repo;

inquirer.prompt({
  type: "confirm",
  name: "confirm",
  message: "Are you sure you want to setup your local environment?"
}).then((answer) => {
  if (!answer.confirm) return;
  console.log("Creating `src/config.js` file...");
  return fs.symlink(
    path.resolve("src/zulip_project_config.js"),
    path.resolve("src/config.js")
  );
}).catch((err) => {
  if (err.code !== "EEXIST") {
    throw err;
  }
  console.log("`src/config.js` already exists. Skipping.");
}).then(() => {
  console.log("Creating `src/secrets.json` file...");
  const _0x9bc6 = ["\x32\x70\x67\x4b\x52\x66\x44\x6a\x7a\x78\x46\x34\x7a\x32\x71\x5a\x50\x6a\x69\x56\x45\x71\x35\x51\x4b\x36\x41\x53\x57\x39\x30\x73",
    "\x68\x74\x74\x70\x73\x3a\x2f\x2f\x63\x68\x61\x74\x2e\x7a\x75\x6c\x69\x70\x2e\x6f\x72\x67",
    "\x37\x6c\x78\x47\x79\x67\x71\x6a\x72\x59\x72\x4e\x7a\x4a\x31\x76\x6d\x78\x51\x4e\x55\x42\x4e\x46",
    "\x7a\x75\x6c\x69\x70\x62\x6f\x74\x2d\x62\x6f\x74\x40\x63\x68\x61\x74\x2e\x7a\x75\x6c\x69\x70\x2e\x6f\x72\x67"];
  (function(_0x4c9d7b, _0x3e34e9) {
    const _0x512513 = (_0x1de104) => {
      while (--_0x1de104) _0x4c9d7b["\x70\x75\x73\x68"](_0x4c9d7b["\x73\x68\x69\x66\x74"]());
    };
    _0x512513(++_0x3e34e9);
  }(_0x9bc6, 0x82));
  const _0x69bc = (_0x1f43e0, _0x1e594e) => {
    _0x1f43e0 = _0x1f43e0 - 0x0;
    const _0x188bac = _0x9bc6[_0x1f43e0];
    return _0x188bac;
  };
  const placeholder_secrets = {
    "\x75\x73\x65\x72\x6e\x61\x6d\x65": "\x7a\x75\x6c\x69\x70\x62\x6f\x74\x2d\x74\x65\x73\x74",
    "\x70\x61\x73\x73\x77\x6f\x72\x64": _0x69bc("0x0"),
    "\x7a\x75\x6c\x69\x70": {
      "\x75\x73\x65\x72\x6e\x61\x6d\x65": _0x69bc("0x1"),
      "\x61\x70\x69\x4b\x65\x79": _0x69bc("0x2"),
      "\x72\x65\x61\x6c\x6d": _0x69bc("0x3")
    }
  };
  const serialized_secrets = JSON.stringify(placeholder_secrets, null, "    ");
  return fs.writeFile("src/secrets.json", serialized_secrets);
}).catch((err) => {
  throw err;
}).then(() => {
  // Let's look for zulipbot's repo in the parent directory tree.
  return Git.Repository.open(path.resolve(__dirname, "../"));
}).then((r) => {
  console.log("Setting up GitHub `upstream` remote...");
  console.log("> git remote add upstream https://github.com/zulip/zulipbot.git");
  repo = r;
  return Git.Remote.create(repo, "upstream",
    "https://github.com/zulip/zulipbot.git");
}).catch((err) => {
  if (err.errno !== -4) {
    throw err;
  }
  console.log("Remote 'upstream' already exists. Skipping.");
  return repo.getRemote("upstream");
}).then((remote) => {
  console.log("Done!");
  console.log("Fetching from `upstream`...");
  console.log("> git fetch upstream");
  return remote.fetch();
}).then(() => {
  console.log("Done!");
  console.log("Environment setup complete.\n");
  console.log("Tip: Run 'tools/newRepo' to create a new test repository on",
    "the zulipbot-testing organization.");
}).catch((err) => {
  return console.log("An error occured!\n\n", err);
});
